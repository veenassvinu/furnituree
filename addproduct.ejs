<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Furniture</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Optional JavaScript (for components like modals, dropdowns, etc.) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

      
</head>

<body>


    <style>
        /* General Reset */
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        /* 
/* Sidebar Styles */
        .sidebar {
            width: 250px;
            height: 100vh;
            background-color: #2c7a7b;
            color: white;
            padding: 20px;
            position: fixed;
            left: 0;
            top: 0;
            display: flex;
            flex-direction: column;
        }

        .sidebar h2 {
            margin-bottom: 20px;
            font-size: 1.5rem;
        }

        .sidebar a {
            display: block;
            text-decoration: none;
            color: white;
            margin: 10px 0;
            padding: 10px 15px;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        .sidebar a:hover {
            background-color: #285e61;
        }

        */

        /* Main Content Styles */
        .main-content {
            margin-left: 250px;
            /* Matches sidebar width */
            padding: 20px;
        }

        /* Header Styles */
        .content-header {
            text-align: center;
            margin-bottom: 20px;
        }

        .content-title {
            font-size: 2rem;
            font-weight: 600;
            color: #343a40;
        }

        /* Table Styles */
        .table {
            width: 100%;
            margin-top: 20px;
            border-collapse: collapse;
        }

        .table th,
        .table td {
            text-align: center;
            padding: 12px;
            border-bottom: 1px solid #ddd;
        }

        .table th {
            background-color: #f1f1f1;
            color: #343a40;
        }

        .table tbody tr:hover {
            background-color: #f8f9fa;
        }

        /* Buttons */
        .btn {
            padding: 8px 15px;
            font-size: 14px;
            border-radius: 5px;
            border: none;
            transition: opacity 0.3s;
        }

        .btn-info {
            background-color: #17a2b8;
            color: white;
        }

        .btn-danger {
            background-color: #dc3545;
            color: white;
        }

        .btn-success {
            background-color: #28a745;
            color: white;
        }

        .btn-info:hover,
        .btn-danger:hover,
        .btn-success:hover {
            opacity: 0.9;
        }

        .btn a {
            color: white;
            text-decoration: none;
        }

        /* Form Styles */
        .form-label {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .form-control {
            padding: 10px;
            font-size: 1rem;
        }

        .form-select {
            width: 100%;
            padding: 10px;
            font-size: 1rem;
        }

        /* Error Messages */
        .error-message {
            color: red;
            font-size: 0.875rem;
        }

        /* Thumbnails and Image Upload */
        .thumbnails-container {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            justify-content: space-between;
        }

        .thumbnail {
            width: 100px;
            height: 100px;
            border-radius: 8px;
            overflow: hidden;
        }

        .image-cropper {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 10px;
        }

        .image-cropper img {
            width: 100%;
            height: auto;
            max-width: 300px;
        }

        .image-cropper button {
            margin-left: 10px;
        }

        #addedImagesContainer {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 10px;
        }

        #imgView1,
        #prev2,
        #prev3,
        #prev4 {
            max-width: 100%;
            height: auto;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        /* Grid and Column Styling */
        .row {
            margin-bottom: 20px;
        }

        .col-lg-4,
        .col-lg-6 {
            margin-bottom: 20px;
            margin-left: 400px;
        }

        .col-lg-6 img {
            max-width: 100%;
            height: auto;
            margin-bottom: 10px;
        }

        /* Cards */
        .card {
            margin-bottom: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            overflow: hidden;
        }

        .card-header {
            font-size: 1.25rem;
            font-weight: bold;
            background-color: #f8f9fa;
            padding: 10px 15px;
        }

        .card-body {
            padding: 20px;
        }

        /* Miscellaneous */
        .align-items-center {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .btn-md {
            padding: 12px 20px;
            font-size: 1.1rem;
            margin-top: 15px;
        }

        input[type="file"] {
            font-size: 1rem;
            margin-top: 10px;
        }
    </style>


    <%- include("../../views/partials/admin/sidebar")%>

        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header">
                        <h2 class="content-title">Add New Product</h2>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <form id="addform" action="/admin/addproduct" method="post"
                                onsubmit="return validateForm()">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" placeholder="Type here" name="productName"
                                        class="form-control border" id="product_name">
                                    <div id="productName-error" class="error-message"></div>
                                </div>


                                <div class="mb-4">
                                    <label class="form-label">Full description</label>
                                    <textarea placeholder="Type here" id="descriptionid" name="description"
                                        class="form-control border" rows="4"></textarea>
                                    <div id="description-error" class="error-message"></div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-12" style="margin: auto;">
                                        <div class="mb-4">
                                            <label class="form-label">Regular price</label>
                                            <input placeholder="$" name="regularPrice" type="text"
                                                class="form-control border">
                                            <div id="regularPrice-error" class="error-message"></div>
                                        </div>
                                    </div>


                                    <div class="col-lg-12">
                                        <div class="mb-4">
                                            <label class="form-label">Sale price</label>
                                            <input placeholder="$" name="salePrice" type="text"
                                                class="form-control border">
                                        </div>
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="mb-4">
                                            <label class="form-label">Quantity</label>
                                            <input placeholder="" name="quantity" type="text"
                                                class="form-control border">
                                            <div id="quantity-error" class="error-message"></div>
                                        </div>
                                    </div>

                                    <div class="col-lg-12">
                                        <div class="mb-4">
                                            <label class="form-label">Color</label>
                                            <input name="color" type="text" class="form-control border">
                                        </div>
                                        <div id="color-error" class="error-message"></div>
                                    </div>
                                </div>



                        </div>

                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <%for(let i=0;i<cat.length;i++){%>

                                                <option value="<%=cat[i].name%>">
                                                    <%=cat[i].name%>
                                                </option>
                                                <%}%>
                                                    <!-- Add category options dynamically -->
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose images</h4>
                            </div>
                            <!-- Image Inputs -->
                            <div>
                                <label class="block font-semibold text-gray-700 mb-1">Product Images (Exactly 4
                                    required)</label>
                                <input type="file" id="images1" accept="image/*"
                                    class="image-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                <input type="file" id="images2" accept="image/*"
                                    class="image-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                <input type="file" id="images3" accept="image/*"
                                    class="image-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                <input type="file" id="images4" accept="image/*"
                                    class="image-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">

                                <div id="imagePreview" class="mt-4 grid grid-cols-2 md:grid-cols-4 gap-4"></div>
                                <span id="imagesError" class="text-red-500 text-sm"></span>
                            </div>

                            <!-- Cropper Modal -->
                            <div id="cropperModal"
                                class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
                                <div class="bg-white p-4 rounded-lg">
                                    <div class="modal-body">
                                        <img id="imageToCrop" class="max-w-full" alt="Image for cropping">
                                    </div>
                                    <div class="modal-footer mt-4 flex justify-end">
                                        <button id="cropButton"
                                            class="bg-blue-500 text-white px-4 py-2 rounded-md mr-2">Crop</button>
                                        <button id="cancelCropButton"
                                            class="bg-gray-500 text-white px-4 py-2 rounded-md">Cancel</button>
                                    </div>
                                </div>
                            </div>


                        </div>

                        <button class="btn btn-md rounded font-sm hover-up" type="submit">Publish</button>



                        <!-- </div>
                </div>
            </div>
            </div>
        </section> -->



                        <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
                        <script>

                            function validateForm() {
                                clearErrorMessages();

                                // Getting form values
                                const name = document.getElementsByName('productName')[0].value.trim();
                                const description = document.getElementById('descriptionid').value.trim();
                                const price = document.getElementsByName('regularPrice')[0].value.trim();
                                const saleprice = document.getElementsByName('salePrice')[0].value.trim();
                                const color = document.getElementsByName('color')[0].value.trim();
                                const category = document.getElementsByName('category')[0].value.trim();
                                const images = document.getElementById('input1');
                                const quantity = document.getElementsByName('quantity')[0].value.trim();

                                let isValid = true;

                                // Product Name Validation
                                if (name === "") {
                                    displayErrorMessage('productName-error', 'Please enter a product name.');
                                    isValid = false;
                                } else if (!/^[a-zA-Z\s]+$/.test(name)) {
                                    displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
                                    isValid = false;
                                }

                                // Description Validation
                                if (description === "") {
                                    displayErrorMessage('description-error', 'Please enter a product description.');
                                    isValid = false;
                                }

                                // Quantity Validation
                                if (!/^\d+$/.test(quantity) || parseInt(quantity) < 0) {
                                    displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                                    isValid = false;
                                }

                                // Price Validation
                                if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {
                                    displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                                    isValid = false;
                                }

                                // Sale Price Validation
                                if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                                    displayErrorMessage('salePrice-error', 'Please enter a valid non-negative sale price.');
                                    isValid = false;
                                }
                                if (parseFloat(saleprice) >= parseFloat(price)) {
                                    displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
                                    isValid = false;
                                }

                                // Color Validation
                                if (color === "") {
                                    displayErrorMessage('color-error', 'Please enter a color.');
                                    isValid = false;
                                }

                                // Images Validation
                                if (images.files.length === 0) {
                                    displayErrorMessage('images-error', 'Please select at least one image.');
                                    isValid = false;
                                }

                                // Category Validation
                                if (category === "") {
                                    displayErrorMessage('category-error', 'Please select a category.');
                                    isValid = false;
                                }

                                return isValid;
                            }

                            function displayErrorMessage(elementId, message) {
                                const errorElement = document.getElementById(elementId);
                                errorElement.innerText = message;
                                errorElement.style.display = "block";
                            }

                            function clearErrorMessages() {
                                const errorElements = document.getElementsByClassName('error-message');
                                Array.from(errorElements).forEach(element => {
                                    element.innerText = '';
                                    element.style.display = 'none';
                                });
                            }

                        </script>

                        <!-- JavaScript -->
                        <script>
                            const imageInputs = document.querySelectorAll('.image-input');
                            const imagePreviewContainer = document.getElementById('imagePreview');
                            const cropperModal = document.getElementById('cropperModal');
                            const imageToCrop = document.getElementById('imageToCrop');
                            const cropButton = document.getElementById('cropButton');
                            const cancelCropButton = document.getElementById('cancelCropButton');
                            const imagesError = document.getElementById('imagesError');

                            let cropper;
                            let currentInput;

                            // Handle file selection
                            imageInputs.forEach(input => {
                                input.addEventListener('change', function (event) {
                                    const file = event.target.files[0];
                                    if (file) {
                                        currentInput = input;
                                        const reader = new FileReader();
                                        reader.onload = function (e) {
                                            imageToCrop.src = e.target.result;
                                            cropperModal.classList.remove('hidden');
                                            cropper = new Cropper(imageToCrop, {
                                                aspectRatio: 1, // Adjust the aspect ratio as needed
                                                viewMode: 2,
                                            });
                                        };
                                        reader.readAsDataURL(file);
                                    }
                                });
                            });

                            // Handle crop button
                            cropButton.addEventListener('click', function () {
                                const canvas = cropper.getCroppedCanvas();
                                const croppedImageDataURL = canvas.toDataURL();

                                // Display the cropped image preview
                                const imageWrapper = document.createElement('div');
                                imageWrapper.className = 'relative';
                                const imageElement = document.createElement('img');
                                imageElement.src = croppedImageDataURL;
                                imageElement.className = 'w-full h-auto rounded-md';

                                // Add delete button
                                const deleteButton = document.createElement('button');
                                deleteButton.textContent = 'Delete';
                                deleteButton.className = 'absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded-md';
                                deleteButton.addEventListener('click', () => {
                                    imageWrapper.remove();
                                    currentInput.value = ''; // Reset the input value
                                });

                                imageWrapper.appendChild(imageElement);
                                imageWrapper.appendChild(deleteButton);
                                imagePreviewContainer.appendChild(imageWrapper);

                                // Close modal and destroy cropper
                                cropper.destroy();
                                cropperModal.classList.add('hidden');
                            });

                            // Handle cancel crop button
                            cancelCropButton.addEventListener('click', function () {
                                cropper.destroy();
                                cropperModal.classList.add('hidden');
                            });
                        </script>
</body>

</html>