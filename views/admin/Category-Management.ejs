<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Furniture - Category Management</title>

    <style>
        /* Reset Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Arial, sans-serif;
        }

        body {
            background-color: #f4f4f4;
            color: #333;
        }

        /* Container Layout */
        .container {
            display: flex;
            min-height: 100vh;
            overflow: hidden;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 250px;
            height: 100vh;
            background-color: #2c7a7b;
            color: white;
            position: fixed;
            left: 0;
            padding: 20px;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
        }

        .sidebar h2 {
            margin-bottom: 20px;
            font-size: 22px;
        }

        .sidebar a {
            display: block;
            text-decoration: none;
            color: white;
            margin: 10px 0;
            padding: 8px;
            border-radius: 6px;
            transition: background-color 0.3s;
        }

        .sidebar a:hover {
            background-color: #285e61;
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            padding: 20px;
            background-color: #fff;
            display: flex;
            flex-direction: column;
            gap: 20px;
            overflow: auto;
            margin-left: 250px;
        }

        .top-bar {
            background-color: #38b2ac;
            padding: 15px 20px;
            color: white;
            font-size: 22px;
            font-weight: bold;
            border-radius: 8px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .search-container {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
        }

        .search-input {
            flex: 1;
            padding: 10px;
            border-radius: 6px;
            border: 1px solid #ccc;
            font-size: 14px;
        }

        .search-button {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .search-button:hover {
            background-color: #0056b3;
        }

        .content-wrapper {
            display: flex;
            gap: 30px;
        }

        /* Category Table */
        .category-table {
            width: 100%;
            border-collapse: collapse;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
            overflow: hidden;
        }

        .category-table th,
        .category-table td {
            text-align: left;
            padding: 14px 16px;
            border-bottom: 1px solid #eee;
        }

        .category-table th {
            background-color: #f8f9fa;
            font-weight: 600;
        }

        /* Form Section */
        .form-section {
            background-color: #38b2ac;
            padding: 30px;
            border-radius: 10px;
            color: white;
            width: 100%;
            max-width: 400px;
            margin: 0 auto;
            box-shadow: 0 0 15px rgba(102, 89, 222, 0.05);
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }

        .form-group input {
            width: 100%;
            padding: 10px;
            border-radius: 6px;
            border: none;
            font-size: 14px;
        }

        .create-button {
            width: 100%;
            padding: 12px;
            background-color: #0099ff;
            border: none;
            border-radius: 6px;
            color: white;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .create-button:hover {
            background-color: #007acc;
        }

        .pagination {
            margin-top: 20px;
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .pagination-button {
            padding: 8px 12px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .pagination-button.disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .error-text {
            display: none;
            color: #fff;
            background-color: #dc3545;
            padding: 8px 12px;
            border-radius: 4px;
            margin-top: 6px;
            font-size: 14px;
            font-weight: 500;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .content-wrapper {
                flex-direction: column;
            }

            .form-section {
                margin-top: 20px;
            }

            .sidebar {
                width: 200px;
            }
        }
    </style>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">


</head>

<body>
    <div class="container">
        <!-- Sidebar -->
        <%- include("../../views/partials/admin/sidebar") %>

            <!-- Main Content -->
            <div class="main-content">
                <!-- Top Bar -->
                <div class="top-bar">
                    Category Management
                </div>

                <div class="search-container" style="display: flex; gap: 10px; margin-bottom: 20px;">
                    <form action="/admin/category" method="get" style="display: flex; flex: 1; gap: 10px;">
                        <input type="text" name="search" class="search-input form-control"
                            placeholder="Search Categories" value="<%= typeof search !== 'undefined' ? search : '' %>">
                        <button type="submit" class="search-button btn btn-primary">Search</button>
                        <button type="button" class="btn btn-secondary" onclick="resetSearch()">Reset</button>
                    </form>
                </div>


                <!-- Content Wrapper -->
                <div class="content-wrapper">
                    <!-- Category Table -->
                    <div class="table-wrapper">
                        <table class="category-table">
                            <thead>
                                <tr>
                                    <th>Name</th>

                                    <th>Actions</th>

                                    <th>status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (cat && cat.length> 0) { %>
                                    <% cat.forEach(cat=> { %>
                                        <tr>
                                            <td>
                                                <%= cat.name %>
                                            </td>
                                            <td>
                                                <!-- Update Button -->
                                                <button class="btn btn-secondary btn-sm update-button"
                                                    data-bs-toggle="modal" data-bs-target="#updateModal-<%= cat._id %>"
                                                    onclick="populateUpdateModal('<%= cat._id %>', '<%= cat.name %>', '<%= cat.description %>')">
                                                    Update
                                                </button>

                                                <!-- Update Modal -->
                                                <div class="modal fade" id="updateModal-<%= cat._id %>" tabindex="-1"
                                                    aria-labelledby="updateModalLabel-<%= cat._id %>"
                                                    aria-hidden="true">
                                                    <div class="modal-dialog">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <h5 class="modal-title"
                                                                    id="updateModalLabel-<%= cat._id %>">Update Category
                                                                </h5>
                                                                <button type="button" class="btn-close"
                                                                    data-bs-dismiss="modal" aria-label="Close"></button>
                                                            </div>
                                                            <div class="modal-body">
                                                                <form id="updateCategoryForm-<%= cat._id %>">
                                                                    <input type="hidden"
                                                                        id="updateCategoryId-<%= cat._id %>"
                                                                        value="<%= cat._id %>">
                                                                    <div class="mb-3">
                                                                        <label for="updateCategoryName-<%= cat._id %>"
                                                                            class="form-label">Category Name</label>
                                                                        <input type="text" class="form-control"
                                                                            id="updateCategoryName-<%= cat._id %>"
                                                                            placeholder="Enter category name"
                                                                            value="<%= cat.name %>">
                                                                    </div>
                                                                    <div class="mb-3">
                                                                        <label
                                                                            for="updateCategoryDescription-<%= cat._id %>"
                                                                            class="form-label">Description</label>
                                                                        <input type="text" class="form-control"
                                                                            id="updateCategoryDescription-<%= cat._id %>"
                                                                            placeholder="Enter category description"
                                                                            value="<%= cat.description %>">
                                                                    </div>
                                                                </form>
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-secondary"
                                                                    data-bs-dismiss="modal">Close</button>
                                                                <button type="button" class="btn btn-primary"
                                                                    onclick="updateCategory('<%= cat._id %>')">Save
                                                                    Changes</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>


                                                <!-- List/Unlist Button -->
                                            <td>
                                                <button class="btn btn-primary btn-sm list-button"
                                                    onclick="toggleListStatus(this, '<%= cat._id %>', '<%= cat.isListed %>')">
                                                    <%= cat.isListed ? 'Unlist' : 'List' %>
                                                </button>
                                            </td>
                                            </td>

                                            <!-- Status Column -->

                                            <td>
                                                <span
                                                    class="badge status-badge <%= cat.isListed ? 'bg-success' : 'bg-danger' %>">
                                                    <%= cat.isListed ? 'Listed' : 'Unlisted' %>
                                                </span>
                                            </td>
                                        </tr>
                                        <% }); %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="3">No categories available.</td>
                                                </tr>
                                                <% } %>
                            </tbody>
                        </table>

                        <div class="pagination">
                            <button class="pagination-button" onclick="changePage(`<%= currentPage - 1 %>`)"
                                <%=currentPage===1 ? 'disabled' : '' %>>Previous</button>

                            <% for (let p=1; p <=totalPages; p++) { %>
                                <button class="pagination-button <%= currentPage === p ? 'active' : '' %>"
                                    onclick="changePage(`<%= p %>`)">
                                    <%= p %>
                                </button>
                                <% } %>

                                    <button class="pagination-button" onclick="changePage(`<%= currentPage + 1 %>`)"
                                        <%=currentPage===totalPages ? 'disabled' : '' %>>Next</button>
                        </div>


                    </div>


                    <!-- Form Section  -->


                    <div class="form-section">
                        <form id="categoryForm" action="/admin/add-category" method="POST">
                            <h2 style="font-size: 28px; margin-bottom: 20px;">Create Category</h2>

                            <!-- Category Name -->
                            <div class="form-group">
                                <label for="name" style="display: block; margin-bottom: 5px;">Category Name</label>
                                <input type="text" id="name" name="name" placeholder="Enter category name"
                                    style="width: 100%; padding: 10px; border-radius: 6px; border: none; font-size: 16px;">
                                <small id="nameError" style="color: #e61212; display: none;">Category name is
                                    required</small>
                            </div>



                            <!-- Description -->
                            <div class="form-group" style="margin-top: 15px;">
                                <label for="description" style="display: block; margin-bottom: 5px;">Description</label>
                                <input type="text" id="description" name="description"
                                    placeholder="Enter category description"
                                    style="width: 100%; padding: 10px; border-radius: 6px; border: none; font-size: 16px;">
                                <small id="descError" style="color: #e61212; display: none;">Description is
                                    required</small>
                            </div>

                            <!-- Submit Button -->
                            <button type="submit" class="create-button"
                                style="margin-top: 20px; width: 100%; padding: 14px; font-size: 16px; background-color: #0099ff; color: white; border: none; border-radius: 6px; cursor: pointer;">
                                Create Category
                            </button>
                        </form>
                    </div>

                </div>
            </div>
    </div>
</body>
<script>


    function changePage(page) {
        const search = document.querySelector(".search-input")?.value || "";
        const query = search ? `?search=${encodeURIComponent(search)}&page=${page}` : `?page=${page}`;
        window.location.href = `/admin/category${query}`;
    }
    function resetSearch() {
        window.location.href = "/admin/category";
    }

    function validateForm() {
        clearErrorMessage();
        const name = document.getElementByName("name")[0].value.trim();
        const description = document.getElementById("descriptionId").value.trim();
        isValid = true;

        if (name === "") {
            displayErrorMessage("name-error", "Please enter a name");
            isValid = false
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
            isValid = false;
        }
        if (description === "") {
            displayErrorMessage("description-error", "Please enter a description")
            isValid = false;
        }
        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
    function clearErrorMessage() {
        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach((element) => {
            element.innerText = "";
            element.style.display = "none";
        });
    }


    function populateUpdateModal(id, name, description) {
        document.getElementById('updateCategoryId').value = id;
        document.getElementById('updateCategoryName').value = name;
        document.getElementById('updateCategoryDescription').value = description;
    }

    function updateCategory(categoryId) {
        console.log("Updating category with ID:", categoryId);

        // Dynamically get the IDs of the modal elements
        const categoryNameElement = document.getElementById(`updateCategoryName-${categoryId}`);
        const categoryDescriptionElement = document.getElementById(`updateCategoryDescription-${categoryId}`);

        // Validate that the elements exist
        if (!categoryNameElement || !categoryDescriptionElement) {
            console.error("Modal elements not found. Ensure the IDs are correct.");
            Swal.fire({
                icon: "error",
                title: "Oops!",
                text: "Failed to find the input fields. Please try again.",
            });
            return;
        }

        // Get the values from the input fields
        const categoryName = categoryNameElement.value.trim();
        const categoryDescription = categoryDescriptionElement.value.trim();

        // Validate input fields
        if (!categoryName || !categoryDescription) {
            Swal.fire({
                icon: "error",
                title: "Oops!",
                text: "Please fill in all fields.",
            });
            return;
        }

        // Send the updated data to the server
        fetch(`/admin/update-category/${categoryId}`, {
            method: "PUT", // Ensure the backend accepts PUT requests
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                name: categoryName,
                description: categoryDescription,
            }),
        })
            .then((response) => {
                if (!response.ok) {
                    throw new Error("Failed to update category.");
                }
                return response.json();
            })
            .then((data) => {
                if (data.success) {
                    Swal.fire({
                        icon: "success",
                        title: "Success!",
                        text: "Category updated successfully.",
                    }).then(() => {
                        location.reload(); // Reload the page to reflect changes
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: data.message || "Failed to update the category.",
                    });
                }
            })
            .catch((error) => {
                console.error("Error updating category:", error);
                Swal.fire({
                    icon: "error",
                    title: "Oops!",
                    text: "An error occurred while updating the category.",
                });
            });
    }

    function toggleListStatus(button, categoryId, isListed) {
        const action = isListed === "true" ? "Unlist-category" : "List-category";
        const confirmMessage = isListed === "true"
            ? "Are you sure you want to unlist this category?"
            : "Are you sure you want to list this category?";

        Swal.fire({
            title: 'Confirm Action',
            text: confirmMessage,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: isListed === "true" ? 'Yes, Unlist' : 'Yes, List',
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/${action}/${categoryId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                    .then((response) => {
                        if (!response.ok) {
                            throw new Error(`Failed to ${isListed === "true" ? 'unlist' : 'list'} category.`);
                        }
                        return response.json();
                    })
                    .then((data) => {
                        if (data.success) {
                            // Update button text and toggle status dynamically
                            button.textContent = isListed === "true" ? "List" : "Unlist";
                            button.setAttribute('onclick', `toggleListStatus(this, '${categoryId}', '${isListed !== "true"}')`);

                            // Update status badge dynamically
                            const statusBadge = button.closest('tr').querySelector('.status-badge');
                            if (statusBadge) {
                                statusBadge.textContent = isListed === "true" ? "Unlisted" : "Listed";
                                statusBadge.className = `badge status-badge ${isListed === "true" ? "bg-danger" : "bg-success"}`;
                            }

                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: `Category ${isListed === "true" ? 'unlisted' : 'listed'} successfully!`,
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: `Error: ${data.message}`,
                            });
                        }
                    })
                    .catch((error) => {
                        console.error("Error:", error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: `An error occurred while ${isListed === "true" ? 'unlisting' : 'listing'} the category.`,
                        });
                    });
            }
        });
    }


</script>
<script>
    document.getElementById("categoryForm").addEventListener("submit", function (e) {
        e.preventDefault();

        const name = document.getElementById("name").value.trim();
        const description = document.getElementById("description").value.trim();
        const nameError = document.getElementById("nameError");
        const descError = document.getElementById("descError");

        // Reset error messages
        nameError.style.display = "none";
        descError.style.display = "none";

        let valid = true;

        if (!name) {
            nameError.style.display = "block";
            valid = false;
        }

        if (!description) {
            descError.style.display = "block";
            valid = false;
        }

        if (!valid) return;

        // Submit via fetch to backend
        fetch('/admin/add-category', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name, description })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message || 'Category added successfully!',
                    }).then(() => {
                        // Optionally reset form or reload
                        document.getElementById("categoryForm").reset();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: data.message || 'Something went wrong!',
                    });
                }
            })
            .catch(error => {
                console.error("Error:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops!',
                    text: 'Server error. Please try again later.',
                });
            });
    });
</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


</html>